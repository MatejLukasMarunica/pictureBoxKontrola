<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>